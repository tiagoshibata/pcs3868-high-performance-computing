#include <stdio.h>
#include <sys/sysinfo.h>

#include "mede_time.h"

#define min(a, b)    ((a) < (b) ? (a) : (b))

#define SIZE 40000000
shared int a[SIZE];
shared int sum;
shared Semaph S;
shared int nprocs;
shared int partition_size;

task spec init_vetor();
task body init_vetor()
{
    int i;
    forall i = 0 to (SIZE - 1) {
        a[i] = 1.0;
    }
}


task spec soma_elementos();
task body soma_elementos()
{
    int i;

    forall i = 0 to (nprocs - 1) {
        int private_sum = 0;
        for (int j = i * partition_size; j < min((i + 1) * partition_size, SIZE); j++) {
            private_sum += a[j];
        }
        lock(&S);
        sum += private_sum;
        unlock(&S);
    }
}

int main()
{
    nprocs = get_nprocs();
    partition_size = (SIZE + nprocs - 1) / nprocs;
    printf("nprocs = %d\n", nprocs);
    printf("Partition size: %d\n", partition_size);

    create_sem(&S, 1);
    create nprocs, init_vetor();
    wait_all();
    TIMER_CLEAR;
    TIMER_START;
    create nprocs, soma_elementos();
    wait_all();
    TIMER_STOP;
    printf("Sum: %d, time: %.5fms\n", sum, 1000 * TIMER_ELAPSED);
    return 0;
}
