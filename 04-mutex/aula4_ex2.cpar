#include <stdio.h>

shared int A[2000];
shared int B[2000];
shared int C[2000];
shared int X[2000];
shared int Y[2000];
shared Semaph full_2;
shared Semaph full_3;
shared Semaph empty_2;
shared Semaph empty_3;

task spec tar_1();
task body tar_1()
{
  int i;

  for (i=0; i< 1999; i++) {
    lock(&empty_2);
    lock(&empty_3);
    A[i] = X[i] * 3;
    printf("A[%d] = %d gerado\n", i, A[i]);
    fflush(stdout);
    unlock(&full_2);
    unlock(&full_3);
  }
}

task spec tar_2();
task body tar_2()
{
  int i;
  B[0] = 1;
  for (i=1; i < 2000; i++) {
    lock(&full_2);
    B[i] = Y[i] + A[i-1];
    printf("B[%d] = %d gerado\n", i, B[i]);
    fflush(stdout);
    unlock(&empty_2);
  }
}

task spec tar_3();
task body tar_3()
{
  int i;
  C[0] = 1;
  for (i=1; i < 2000; i++) {
    lock(&full_3);
    C[i] = A[i-1] * 2;
    printf("C[%d] = %d gerado\n", i, C[i]);
    fflush(stdout);
    unlock(&empty_3);
  }
}

main()
{
  for (int i = 0; i < 2000; i++) {
    X[i] = i;
    Y[i] = i + 1;
  }
  create_sem(&full_2, 0);
  create_sem(&full_3, 0);
  create_sem(&empty_2, 1);
  create_sem(&empty_3, 1);
  printf("semaforo e vetores criado\n");
  create 1, tar_1();
  create 1, tar_2();
  create 1, tar_3();
  wait_all();
  rem_sem(&full_2);
  rem_sem(&full_3);
  rem_sem(&empty_2);
  rem_sem(&empty_3);
  printf("FIM DO PROGRAMA \n");
  fflush(stdout);
}
